---
export const prerender = false;

import BaseLayout from '../layouts/BaseLayout.astro';
import type { D1Database } from '@cloudflare/workers-types';
import { getRuntime } from '@astrojs/cloudflare/runtime';

export interface Env {
	DB: D1Database;
}

interface Entry {
	name: string;
	timestamp: number;
	url: string;
	message: string;
}

const req = Astro.request;
const runtime = getRuntime(Astro.request);
const env = runtime.env as Env;

if (
	req.method === 'POST' &&
	req.headers.get('Content-Type') === 'application/x-www-form-urlencoded'
) {
	const data = new URLSearchParams(await req.text());
	console.dir(data);
	const name = data.get('name')?.trim();
	const url = data.get('link')?.trim() ?? '';
	const message = data.get('message')?.trim() ?? '';
	const anon = data.get('anonymous') === 'on';
	if (
		name &&
		name?.length <= 64 &&
		(!url || url.includes('://')) &&
		url.length <= 128 &&
		message.length <= 320
	) {
		const timestamp = Date.now();
		console.log(Astro.clientAddress);
		const m = JSON.stringify({
			content: '<@684428788481917044> New guestbook message',
			embeds: [
				{
					type: 'rich',
					title: name,
					url: url,
					description: message,
					color: 0x36f38b,
					fields: [
						{
							name: `Sent at`,
							value: `<t:${Math.floor(timestamp / 1000)}>`
						},
						{
							name: 'Country',
							value: runtime.cf?.country
						}
					]
				}
			]
		});
		const res = await fetch(import.meta.env.WEBHOOK_URL, {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: m
		});
		console.log(await res.text());

		await env.DB.prepare(`INSERT INTO entries VALUES (?1, ?2, ?3, ?4)`)
			.bind(anon ? '(anon)' : name, timestamp, url, message)
			.run();
	}
}

const result = (await env.DB.prepare('SELECT * FROM entries ORDER BY timestamp DESC').all())
	.results as unknown as Entry[] | null;
---

<BaseLayout title="Guestbook">
	<div class="w-[36rem]">
		<h1 class="mb-2">Guestbook</h1>
		<form id="guestbookForm" method="post" class="w-full mb-4 p-3 grid gap-1 items-start card">
			<input class="p-1" type="text" name="name" placeholder="Name" maxlength="64" required />
			<input
				type="url"
				name="link"
				maxlength="128"
				placeholder="Link to web/social media presence"
			/>
			<textarea
				class="h-28 resize-y"
				style="margin-bottom:0"
				name="message"
				placeholder="Message"
				maxlength="320"></textarea>
			<div class="w-fit grid grid-cols-[auto_1em] gap-2 items-stretch">
				<label for="formAnonymous">Submit anonymously?</label>
				<input class="mt-0.5" type="checkbox" id="formAnonymous" name="anonymous" />
			</div>
			<input class="justify-self-center" type="submit" value="Submit" />
		</form>
	</div>
	<hr class="border-divider-stroke mb-3" />
	<ul class="grid gap-1">
		{
			result?.map((e) => (
				<li class="grid gap-y-1 items-center card p-4">
					{e.url ? (
						<a class="row-start-1" href={e.url}>
							<h2 class="text-h4">{e.name}</h2>
						</a>
					) : (
						<h2 class="row-start-1 text-h4">{e.name}</h2>
					)}
					<span class="row-start-1 justify-self-end text-neutral-500 dark:text-neutral-400">
						{new Date(e.timestamp).toDateString()}
					</span>
					{e.message && <p>{e.message}</p>}
				</li>
			))
		}
	</ul>
</BaseLayout>
