---
export const prerender = false;

import BaseLayout from '@/layouts/BaseLayout.astro';
import { postGuestbookWebhook } from '../lib/discord';
import { formatDate } from '../lib/date';
import { verifyChallenge } from '../lib/turnstile';
import { createClient } from '@libsql/client';

interface Entry {
	name: string;
	timestamp: number;
	url: string;
	message: string;
}

const req = Astro.request;
const runtime = Astro.locals.runtime;

const turso = createClient({
	url: runtime.env.TURSO_URI,
	authToken: runtime.env.TURSO_TOKEN
})

function sanitize(input: string) {
	return input.replace(/</g, '&lt;').replace(/>/g, '&gt;');
}

if (
	req.method === 'POST' &&
	req.headers.get('Content-Type') === 'application/x-www-form-urlencoded'
) {
	const data = new URLSearchParams(await req.text());

	if (
		await verifyChallenge(runtime.env, data.get('cf-turnstile-response') ?? '', Astro.clientAddress)
	) {
		const name = sanitize(data.get('name')?.trim() ?? '');
		const url = sanitize(data.get('link')?.trim() ?? '');
		const message = sanitize(data.get('message')?.trim() ?? '');
		const anon = data.get('anonymous') === 'on';
		if (
			name &&
			name?.length <= 64 &&
			(!url || url.includes('://')) &&
			url.length <= 128 &&
			message.length <= 320
		) {
			const timestamp = Date.now();
			postGuestbookWebhook(
				runtime.env,
				name,
				url,
				message,
				timestamp,
				Astro.clientAddress,
				(runtime.cf?.country as string) ?? 'None',
				req.headers.get('User-Agent') ?? 'Unavailable'
			);
			// CREATE TABLE entries (name TEXT, timestamp INTEGER, url TEXT, message TEXT)
			await turso.execute({
				sql: `INSERT INTO entries VALUES (?1, ?2, ?3, ?4)`,
				args: [anon ? '(anon)' : name, timestamp, url, message]
			})
		}
	}
}

const result = (await turso.execute('SELECT * FROM entries ORDER BY timestamp DESC'))
	.rows as unknown as Entry[] | null;
---

<BaseLayout title="Guestbook">
	<Fragment slot="head">
		<meta name="robots" content="noindex" />
		<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
	</Fragment>

	<div class="w-full md:min-w-[36rem]">
		<h1 class="mb-2">Guestbook</h1>
		<form id="guestbookForm" method="post" class="card mb-4 grid w-full items-start gap-1 p-3">
			<input class="p-1" type="text" name="name" placeholder="Name" maxlength="64" required />
			<input
				type="url"
				name="link"
				maxlength="128"
				placeholder="Link to web/social media presence"
			/>
			<textarea
				class="h-28 resize-y"
				style="margin-bottom:0"
				name="message"
				placeholder="Message"
				maxlength="320"></textarea>
			<div class="grid w-fit grid-cols-[auto_1em] items-stretch gap-2">
				<label for="formAnonymous">Submit anonymously?</label>
				<input class="mt-0.5" type="checkbox" id="formAnonymous" name="anonymous" />
			</div>
			<div class="cf-turnstile" data-sitekey="0x4AAAAAAAIkiKaNNrmrks99"></div>
			<small class="text-caption italic">
				When you press Submit, your IP address, derived country code, and user agent will be logged
				for spam detection purposes. If you'd like this to be deleted (or your entry modified or
				removed), contact me using any of the links at the <a href="/">homepage</a>.
			</small>
			<input class="mt-3 justify-self-center" id="submitButton" type="submit" value="Submit" />
		</form>
		<hr class="mb-3" />
		<ul class="grid gap-1">
			{
				result?.map((e) => (
					<li class="card grid items-center gap-y-1 p-4">
						{e.url ? (
							<a class="row-start-1" rel="ugc" href={e.url} target="_blank">
								<h2 class="text-h4">{e.name}</h2>
							</a>
						) : (
							<h2 class="row-start-1 text-h4">{e.name}</h2>
						)}
						<span class="row-start-1 justify-self-end text-neutral-500 dark:text-neutral-400">
							{formatDate(new Date(e.timestamp))}
						</span>
						{e.message && <p>{e.message}</p>}
					</li>
				))
			}
		</ul>
	</div>
	<script>
		const submitButton = document.querySelector('#submitButton') as HTMLInputElement;
		document.forms[0].addEventListener('submit', () => {
			submitButton.disabled = true;
		});
	</script>
</BaseLayout>
